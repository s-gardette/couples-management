---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getSession } from 'auth-astro/server';

const session = await getSession(Astro.request);

// Redirect if already signed in
if (session) {
  return Astro.redirect('/dashboard');
}
---

<BaseLayout title="Sign Up - Household Manager">
  <div class="max-w-md mx-auto">
    <div class="bg-card rounded-lg shadow-lg p-6">
      <h1 class="text-2xl font-bold text-center mb-6">Create Account</h1>
      
      <form id="signup-form" class="space-y-4">
        <div>
          <label for="username" class="block text-sm font-medium mb-1">Username</label>
          <input
            type="text"
            id="username"
            name="username"
            required
            class="w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring"
            placeholder="Enter your username"
          />
        </div>
        
        <div>
          <label for="email" class="block text-sm font-medium mb-1">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring"
            placeholder="Enter your email"
          />
        </div>
        
        <div>
          <label for="password" class="block text-sm font-medium mb-1">Password</label>
          <input
            type="password"
            id="password"
            name="password"
            required
            minlength="6"
            class="w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring"
            placeholder="Enter your password"
          />
        </div>
        
        <div>
          <label for="confirmPassword" class="block text-sm font-medium mb-1">Confirm Password</label>
          <input
            type="password"
            id="confirmPassword"
            name="confirmPassword"
            required
            class="w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring"
            placeholder="Confirm your password"
          />
        </div>
        
        <button
          type="submit"
          id="submit-btn"
          class="w-full bg-primary text-primary-foreground hover:bg-primary/90 font-medium py-2 px-4 rounded-md transition-colors"
        >
          Create Account
        </button>
      </form>
      
      <div id="error-message" class="mt-4 text-red-600 text-sm hidden"></div>
      <div id="success-message" class="mt-4 text-green-600 text-sm hidden"></div>
      
      <div class="mt-6 text-center">
        <p class="text-muted-foreground">
          Already have an account? 
          <a href="/auth/signin" class="text-primary hover:underline">Sign in</a>
        </p>
      </div>
    </div>
  </div>

  <script>
    const form = document.getElementById('signup-form') as HTMLFormElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const errorMessage = document.getElementById('error-message') as HTMLElement;
    const successMessage = document.getElementById('success-message') as HTMLElement;
    
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form);
      const username = formData.get('username') as string;
      const email = formData.get('email') as string;
      const password = formData.get('password') as string;
      const confirmPassword = formData.get('confirmPassword') as string;
      
      // Reset messages
      errorMessage.classList.add('hidden');
      successMessage.classList.add('hidden');
      
      // Validate passwords match
      if (password !== confirmPassword) {
        errorMessage.textContent = 'Passwords do not match';
        errorMessage.classList.remove('hidden');
        return;
      }
      
      submitBtn.disabled = true;
      submitBtn.textContent = 'Creating account...';
      
      try {
        // Register user with FastAPI backend
        const response = await fetch('http://localhost:8000/auth/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            username,
            email,
            password
          })
        });
        
        if (response.ok) {
          successMessage.textContent = 'Account created successfully! Please sign in.';
          successMessage.classList.remove('hidden');
          form.reset();
          
          // Redirect to sign-in page after a delay
          setTimeout(() => {
            window.location.href = '/auth/signin';
          }, 2000);
        } else {
          const errorData = await response.json();
          errorMessage.textContent = errorData.detail || 'Registration failed. Please try again.';
          errorMessage.classList.remove('hidden');
        }
      } catch (error) {
        errorMessage.textContent = 'An error occurred. Please try again.';
        errorMessage.classList.remove('hidden');
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = 'Create Account';
      }
    });
  </script>
</BaseLayout> 